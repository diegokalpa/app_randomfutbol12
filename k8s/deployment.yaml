apiVersion: apps/v1     #se puede ver en kubectl api-resources
kind: Deployment        #se puede ver en kubectl api-resources
metadata:
  name: app-randomfutbol
  labels:
    app: python
spec:
  replicas: 3
  selector:
    matchLabels:
      app: python
  template:             #Desde aqui se construye el pod
    metadata:
      labels:
        app: python
    spec:
      containers:
      - name: app-randomfutbol
        image: diegokalpa/app_randomfutbol:v2
        imagePullPolicy: IfNotPresent
      #   ports:
      #   - containerPort: 80     # Saber que puerto usara este container.
      # restartPolicy: Always

#Aqui empieza a crearse el servicio de tipo ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: svc-randomfutbol
  labels:
    app: python
spec:
  type: ClusterIP
  selector:
    app: python
  ports:
    - protocol: TCP
      port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: service-nodeport
  labels:
    app: python
spec:
  type: NodePort
  selector:
    app: python
  ports:
    - protocol: TCP
      port:       80        # puerto donde estara escuchando el servicio
      targetPort: 5000